<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle" xml:space="preserve">
    <value>About DynamicDataDisplay</value>
  </data>
  <data name="About_1" xml:space="preserve">
    <value>is in «Auto Fit» mode by default. Using mouse with</value>
  </data>
  <data name="About_10" xml:space="preserve">
    <value>Mouse drag</value>
  </data>
  <data name="About_11" xml:space="preserve">
    <value>— Select an area with current aspect ratio</value>
  </data>
  <data name="About_12" xml:space="preserve">
    <value>— Select an area to zoom in</value>
  </data>
  <data name="About_13" xml:space="preserve">
    <value>— Fit to view</value>
  </data>
  <data name="About_14" xml:space="preserve">
    <value>— Copy screenshot of chart to clipboard</value>
  </data>
  <data name="About_15" xml:space="preserve">
    <value>— Save screenshot of chart</value>
  </data>
  <data name="About_2" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="About_3" xml:space="preserve">
    <value>pressed down you can manually select an area to display.</value>
  </data>
  <data name="About_4" xml:space="preserve">
    <value>Mouse wheel</value>
  </data>
  <data name="About_5" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="About_6" xml:space="preserve">
    <value />
  </data>
  <data name="About_7" xml:space="preserve">
    <value>keys  —  Zoom in/Zoom out</value>
  </data>
  <data name="About_8" xml:space="preserve">
    <value>Mouse drag</value>
  </data>
  <data name="About_9" xml:space="preserve">
    <value>— Pan the display area</value>
  </data>
  <data name="ArrayHeightShouldBePositive" xml:space="preserve">
    <value>Array height should be positive.</value>
  </data>
  <data name="ArrayWidthShouldBePositive" xml:space="preserve">
    <value>Array width should be positive.</value>
  </data>
  <data name="AssertionFailed" xml:space="preserve">
    <value>Assertion failed.</value>
  </data>
  <data name="AssertionFailedSearch" xml:space="preserve">
    <value>Assertion failed - search for reasons in code, that is calling method, where this assertion is performed</value>
  </data>
  <data name="CannotDetermineImageTypeByExtension" xml:space="preserve">
    <value>Cannot determine desired type of output image by given file extension.</value>
  </data>
  <data name="CannotGetLastElement" xml:space="preserve">
    <value>Cannot get last element of empty list.</value>
  </data>
  <data name="CannotModifyEmptyRect" xml:space="preserve">
    <value>Cannot modify an empty rect.</value>
  </data>
  <data name="ContextMenuCopyScreenshot" xml:space="preserve">
    <value>Copy screenshot</value>
  </data>
  <data name="ContextMenuCopyScreenshotTooltip" xml:space="preserve">
    <value>Copy screenshot of charts to clipboard</value>
  </data>
  <data name="ContextMenuFitToView" xml:space="preserve">
    <value>Fit to view</value>
  </data>
  <data name="ContextMenuFitToViewTooltip" xml:space="preserve">
    <value>Make visible area fit to display entire contents</value>
  </data>
  <data name="ContextMenuQuickHelp" xml:space="preserve">
    <value>Quick help</value>
  </data>
  <data name="ContextMenuQuickHelpTooltip" xml:space="preserve">
    <value>Show brief instructions</value>
  </data>
  <data name="ContextMenuSaveScreenshot" xml:space="preserve">
    <value>Save screenshot</value>
  </data>
  <data name="ContextMenuSaveScreenshotTooltip" xml:space="preserve">
    <value>Specify name of image file to save screenshot to</value>
  </data>
  <data name="EachTransformShouldNotBeNull" xml:space="preserve">
    <value>Each transform in transforms should not be null.</value>
  </data>
  <data name="ExtensionCannotBeNullOrEmpty" xml:space="preserve">
    <value>Extension cannot be null or empty.</value>
  </data>
  <data name="FilePathCannotbeNullOrEmpty" xml:space="preserve">
    <value>Filepath cannot be null or empty.</value>
  </data>
  <data name="HorizontalAxisCannotBeVertical" xml:space="preserve">
    <value>Horizontal axis can be placed only from bottom or top.</value>
  </data>
  <data name="InvalidAxisPlacement" xml:space="preserve">
    <value>Axis placement is incorrect.</value>
  </data>
  <data name="InvalidGenericAxis" xml:space="preserve">
    <value>{0} can hold axis only of {1} type.</value>
  </data>
  <data name="InvalidParentPlotterValue" xml:space="preserve">
    <value>Invalid value of child's parent plotter - it should be equal to plotter that child is added to.</value>
  </data>
  <data name="InvalidParentPlotterValueRemoving" xml:space="preserve">
    <value>Invalid value of child's parent plotter - it should be equal to plotter that child is being removed from.</value>
  </data>
  <data name="IsolinesDataIsUndetailized" xml:space="preserve">
    <value>Input data must be more detailized to build isolines.</value>
  </data>
  <data name="IsolinesDataSourceShouldBeSet" xml:space="preserve">
    <value>Data source should be set before building isolines.</value>
  </data>
  <data name="IsolinesUnsupportedCase" xml:space="preserve">
    <value>Possible mistake: unsupported case in isoline building.</value>
  </data>
  <data name="IsolinesValueIsOutOfCell" xml:space="preserve">
    <value>Value is not between values in corners.</value>
  </data>
  <data name="PaletteTooFewColors" xml:space="preserve">
    <value>Length of colors should be greater or equal to 2.</value>
  </data>
  <data name="ParameterShouldBePositive" xml:space="preserve">
    <value>Parameter should be positive.</value>
  </data>
  <data name="ParentPlotterNotNull" xml:space="preserve">
    <value>Child's parent plotter should be equal to null after it was removed from plotter.</value>
  </data>
  <data name="PlotterElementAddedToAnotherPlotter" xml:space="preserve">
    <value>Cannot add item to Plotter - first it should be removed from another Plotter.</value>
  </data>
  <data name="PlotterElementDidnotCleanedAfterItself" xml:space="preserve">
    <value>IPlotterElement {0} did not removed all its contents from plotter's visual tree. Change this wrong behaviour in OnPlotterDetaching method of this IPlotterElement.</value>
  </data>
  <data name="TextOfTickShouldNotBeNull" xml:space="preserve">
    <value>Text of tick returned by GetStringCore should not be null.</value>
  </data>
  <data name="UnsupportedRangeInAxis" xml:space="preserve">
    <value>Ticks cannot be generated for this range.</value>
  </data>
  <data name="VerticalAxisCannotBeHorizontal" xml:space="preserve">
    <value>Vertical axis can be placed only from left or right.</value>
  </data>
  <data name="VisualBindingsWrongState" xml:space="preserve">
    <value>Wrong state of VisualBindings.</value>
  </data>
  <data name="WidthAndHeightCannotBeNegative" xml:space="preserve">
    <value>Width and height cannot be negative.</value>
  </data>
</root>